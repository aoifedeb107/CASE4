/* Generated By:JavaCC: Do not edit this line. AoifesParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AoifesParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 10;
  /** RegularExpression Id. */
  int BOOL = 11;
  /** RegularExpression Id. */
  int CONST = 12;
  /** RegularExpression Id. */
  int DO = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int FALSE = 15;
  /** RegularExpression Id. */
  int IF = 16;
  /** RegularExpression Id. */
  int INT = 17;
  /** RegularExpression Id. */
  int MAIN = 18;
  /** RegularExpression Id. */
  int NOT = 19;
  /** RegularExpression Id. */
  int OR = 20;
  /** RegularExpression Id. */
  int RETURN = 21;
  /** RegularExpression Id. */
  int THEN = 22;
  /** RegularExpression Id. */
  int TRUE = 23;
  /** RegularExpression Id. */
  int VAR = 24;
  /** RegularExpression Id. */
  int VOID = 25;
  /** RegularExpression Id. */
  int WHILE = 26;
  /** RegularExpression Id. */
  int BEGIN = 27;
  /** RegularExpression Id. */
  int END = 28;
  /** RegularExpression Id. */
  int IDENTIFIER = 29;
  /** RegularExpression Id. */
  int LETTER = 30;
  /** RegularExpression Id. */
  int STRING_OF_SORTS = 31;
  /** RegularExpression Id. */
  int NUMBER = 32;
  /** RegularExpression Id. */
  int DIGIT = 33;
  /** RegularExpression Id. */
  int DIGITS = 34;
  /** RegularExpression Id. */
  int ADD = 35;
  /** RegularExpression Id. */
  int SUB = 36;
  /** RegularExpression Id. */
  int MUL = 37;
  /** RegularExpression Id. */
  int DIV = 38;
  /** RegularExpression Id. */
  int EQ = 39;
  /** RegularExpression Id. */
  int NEQ = 40;
  /** RegularExpression Id. */
  int LT = 41;
  /** RegularExpression Id. */
  int GT = 42;
  /** RegularExpression Id. */
  int LTEQ = 43;
  /** RegularExpression Id. */
  int GTEQ = 44;
  /** RegularExpression Id. */
  int LPAREN = 45;
  /** RegularExpression Id. */
  int RPAREN = 46;
  /** RegularExpression Id. */
  int COMMA = 47;
  /** RegularExpression Id. */
  int SEMICOLON = 48;
  /** RegularExpression Id. */
  int COLON = 49;
  /** RegularExpression Id. */
  int ASSIGN = 50;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"/*\"",
    "<token of kind 6>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\"and\"",
    "\"bool\"",
    "\"const\"",
    "\"do\"",
    "\"else\"",
    "\"false\"",
    "\"if\"",
    "\"int\"",
    "\"main\"",
    "\"not\"",
    "\"or\"",
    "\"return\"",
    "\"then\"",
    "\"true\"",
    "\"var\"",
    "\"void\"",
    "\"while\"",
    "\"begin\"",
    "\"end\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<STRING_OF_SORTS>",
    "<NUMBER>",
    "<DIGIT>",
    "<DIGITS>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\":=\"",
  };

}
